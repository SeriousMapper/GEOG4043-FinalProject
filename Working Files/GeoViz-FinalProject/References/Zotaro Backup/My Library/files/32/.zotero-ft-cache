Towards Data Science

Sign in
Get started
Follow
591K Followers
¬∑
Editors' Picks Features Deep Dives Grow Contribute
About
Responses

What are your thoughts?
Cancel
Respond

Also publish to my profile

There are currently no responses for this story.

Be the first to respond.

You have 2 free member-only stories left this month.
Sign up for Medium and get an extra one

Hands-on Tutorials
Visualizing Bus Trajectories in Denver
Using Python and Unfolded to visualize RTD‚Äôs real-time bus data feeds
Abdullah Kurkcu

Abdullah Kurkcu

Feb 25 ¬∑ 4 min read

The Regional Transportation District, more commonly referred to as RTD, is the regional agency operating public transit services in Denver. RTD has an open data platform that publishes:

    Schedule data , including the full schedule and route configuration
    Real-time data for RTD bus services, including information about arrival/departure predictions and vehicles locations as GTFS real-time feeds

Final Visualization using Unfolded (Image by Abdullah Kurkcu)

We will use the real-time data feed to first store some data and then use freshly released Unfolded studio to visualize bus movements. It is possible to use Uber‚Äôs Kepler.gl to achieve the same result.

While looking for examples about how to download GTFS real-time data, I have seen this beautifully crafted article and code showing how to download such geospatial data.
Visualizing Istanbul Bus Traffic With Python and KeplerGL
It is a short description of how to prepare GEOJSON formatted data and use it with keplerGL.

medium.com

I followed
Ozan Kara
‚Äôs approach to download GTFS data for the Denver area and made some modifications to the code, and added some additional post-processing steps to compute bus speeds.

The problem I had faced when I tried to download the data is that there are some idle buses in the GTFS feed, which alters the format of the feed. For example, if a vehicle is idle, then tags such as tripID/stopID do not exist.

Let‚Äôs take a look at the regular feed for scheduled vehicles:

If the bus doesn‚Äôt have a schedule yet, this is what the JSON looks like:

As you can see, the buses without a schedule do not have stopId, tripId, routeId, and so on. That‚Äôs why we have to check if these tags exist before trying to read them. Let‚Äôs import the libraries we will need throughout the data download process.

The dummy function below will check for the tags that might exist and pretty much will fill them out with data or NA.

The function below will download the data we need. To be able to download the data from RTD‚Äôs GTFS-realtime data feeds, you will need HTTP basic authentication credentials.
Real-Time Data Feeds Documentation
All passengers are required to wear face masks on RTD services. Capacity is limited to approximately 15 passengers per‚Ä¶

www.rtd-denver.com

We need to call this function every minute since buses send location updates every minute.

Okay, we now have everything we need. You can run this function as long as you want, but I think an hour-long data will be long enough to build a nice visualization. I let it run for a day and stored the data. The function below will save busdata as a geoJSON file. It is formatted in a way that Kepler.gl or Unfolded can animate.

Additionally, I created this messy code below if you would like to calculate the speed of buses. I wanted to compute an average bus speed for a given route. That‚Äôs why the function will compute the speed between each ping and take the average of all these values for the route.

Do not forget to save this as a new geoJSON file.

Everything we need is ready. You can either go to kepler.gl or unfolded.ai to visualize this geoJSON. I will use Unfolded since I have one of my old friends working for that highly successful company.

Log into studio.unfolded.ai and click on ‚ÄúNew Map‚Äù at the upper right. That will take you to the screen asking you to upload data.

Just find the geojson file you saved and drop it on this screen. Unfolded will automatically recognize the format and create an animated timeline for you. The only thing we need to change is the color. I want to color these trajectories based on the average bus speed.
Okay, I lied, this is not the only thing I will change. I will increase the trail length too. It looks much cooler with longer trails :) Thanks Unfolded! (Image by Abdullah Kurkcu)

That‚Äôs all! Here is the video of the end product. You might see some flying vehicles. I believe the reason for that is either they turn on/off their trackers or lose connection to the server.
(Video by Abdullah Kurkcu)
Abdullah Kurkcu

Lead Traffic Modeler @Ulteig
Follow
Abdullah Kurkcu Follows

    Julian Molina
    Julian Molina
    Elena Kosourova
    Elena Kosourova
    Eric Jaffe
    Eric Jaffe
    Abdishakur
    Abdishakur
    Serdar
    Serdar

See all (98)

122
Sign up for The Variable
By Towards Data Science

Every Thursday, the Variable delivers the very best of Towards Data Science: from hands-on tutorials and cutting-edge research to original features you don't want to miss.  Take a look.
Get this newsletter

    Visualization
    Python
    Kepler
    Programming
    Hands On Tutorials 

122
More from Towards Data Science
Follow

Your home for data science. A Medium publication sharing concepts, ideas and codes.
Read more from Towards Data Science
More From Medium
Using RNNs to Predict Tesla Stocks
Mysha Gilani
How to do my first Time Series Analysis ü§î
Viviana M√°rquez
No Edge? Stop Using Time Bars.
Henri Blancke in Icebergh
A Beginner‚Äôs Guide to matplotlib for Data Visualization and Exploration in Python
Imsunilberwal
Strong correlation between HIV prevalence and Covid-19 cases per capita and deaths per capita
Iori
SQL Date-Time Cheatsheet
Olga Berezovsky in Data Analysis Journal
Bike Sharing providers‚Ää‚Äî‚ÄäHere‚Äôs a guide to boost up your business.
Puja P. Pathak in Analytics Vidhya
Understanding Gradient Descent
Peter Grant in Towards Data Science

About

Write

Help

Legal
